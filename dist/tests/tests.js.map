{"version":3,"file":"/tests/tests.js","mappings":"mBAEAA,SAASC,iBAAiB,oBAAoB,WAE1CD,SAASE,cAAc,wBAAwBD,iBAAiB,SAAS,SAAUE,GCJhF,IAA0BC,EACzBC,EDIAF,EAAMG,iBCLmBF,EDMR,+CCLjBC,EAAkB,yBACAL,SAASO,KAAKC,UAAUC,SAASJ,GAMnDL,SAASO,KAAKC,UAAUE,OAAOL,GAF/BL,SAASO,KAAKC,UAAUG,IAAIN,GAM5BD,GACAQ,MAAMR,GACDS,MAAK,SAASC,UDPpB,O","sources":["webpack://optimizepress-ui/./src/tests/tests.js","webpack://optimizepress-ui/./src/js/fullscreen.js"],"sourcesContent":["import {toggleFullscreen} from \"../js/fullscreen\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Add fullscreen toggle event\n    document.querySelector('.opui-fullscreen-btn').addEventListener('click', function (event) {\n        event.preventDefault();\n        toggleFullscreen('https://jsonplaceholder.typicode.com/posts/1');\n    }, false);\n});\n","export function toggleFullscreen(apiEndpoint) {\n    let fullscreenClass = 'opui-app-is-fullscreen';\n    let isFullscreen    = document.body.classList.contains(fullscreenClass);\n\n    // Check if class exists in list\n    if (! isFullscreen) {\n        document.body.classList.add(fullscreenClass);\n    } else {\n        document.body.classList.remove(fullscreenClass);\n    }\n\n    // Send toggle request to API backend if needed\n    if (apiEndpoint) {\n        fetch(apiEndpoint)\n            .then(function(response) {\n                // console.log(\"Toggled fullscreen\");\n            });\n    }\n}\n\n// Old functionality (need to add request to API)\n// let $body = jQuery('body')\n// $body.toggleClass('ops_isFullScreen')\n//\n// const params = new URLSearchParams()\n// params.append('action', 'op3toggleFullScreen')\n// params.append('isFullScreen', $body.hasClass('ops_isFullScreen'))\n//\n// this.$http.post(this.$store.state.settings.ajax_url, params)\n"],"names":["document","addEventListener","querySelector","event","apiEndpoint","fullscreenClass","preventDefault","body","classList","contains","remove","add","fetch","then","response"],"sourceRoot":""}